////////////////////////////////////////////////////////////////////////////////
////////////////////// FXS Mixins & extendable classes ////////////////////////
//////////////////////////////////////////////////////////////////////////////

////////// TEXT RULES ///////////

// Plain text generic style
.fxs_plain_txt_rules(@txt-font-size; @txt-line-height) {
  font-size: @txt-font-size;
  line-height: @txt-line-height;
  font-weight: @txt_fontweight_light;
  > p, ul, ol, > table, > blockquote { margin-bottom: @txt_size_large; }
  ul, ol {
    padding-top: @txt_size_xsmall;
    padding-left: 1rem;
    @media (min-width: @screen-s) { padding-left: 2rem; }
    li { margin-bottom: @txt_size_xsmall; }
  }
  ul {
    list-style-type: disc;
    ul {
      list-style-type: circle;
      ul { list-style-type: square; }
    }
  }
  ol { list-style-type: decimal; }
  h2, h3, h4 { margin-bottom: @txt_defaultsize_rem; }
  > img, .fxs_mediaContainer img {
    min-width: inherit;
    max-width: 100%;
  }
}

// TEXT CONTEXTUAL COLORS
.fxs_txt_color_variants(@txt-color) {
  color: @txt-color;
  a { color: darken(@txt-color, 10%); }
}

////////// BUTTONS, LABELS, ALERTS, NAVS ///////////

// Button Generic
.fxs_btn_properties(@btn-border; @btn-height; @btn-margin; @btn-padding) {
  &:extend(.fxs_boldAntialised_style, .fxs_transition);
  border: @btn-border;
  height: @btn-height;
  margin: @btn-margin;
  padding: @btn-padding;
  cursor: pointer;
  display: inline-block;
  text-align: center;
  vertical-align: middle;
  &, &:hover, &:hover { text-decoration: none!important; }
  &.disabled, &[disabled], fieldset[disabled] & {
    cursor: not-allowed;
    .opacity(.65);
  }
}

// Button variants
.fxs-button-variants(@btn-txt-color; @btn-bg-color; @btn-border-color) {
  color: @btn-txt-color;
  background-color: @btn-bg-color;
  border-color: @btn-border-color;
  &:hover {
    background-color: fade(@btn-bg-color, 80%);
    border-color: fade(@btn-border-color, 40%);
  }
  &.active, .open &.fxs_btn_dd, &:active, &:focus {
    background-color: fade(@btn-bg-color, 80%);
    border-color: darken(@btn-border-color, 16%);
  }
  &.disabled, &[disabled], fieldset[disabled] & {
    &, &:hover, &:focus,
    &.focus, &:active, &.active {
      background-color: @btn-bg-color;
      border-color: @btn-border-color;
    }
  }
}

.fxs-btn-line-variants(@btn-txt-color; @btn-bg-color; @btn-border-color) {
  color: @btn-txt-color;
  border-color: @btn-border-color;
  background-color: transparent;
  &:hover { background-color: fade(@btn-bg-color, 15%); }
  &.active, .open &.fxs_btn_dd, &:active { background-color: @btn-bg-color; }
  &.disabled, &[disabled], fieldset[disabled] & {
    &, &:hover, &:focus,
    &.focus, &:active, &.active { background-color: fade(@btn-bg-color, 0%); }
  }
}

// Labels & subtitles text style
.fxs_stiled_text_variants(@text-box-display; @text-color; @text-font-size) {
  display: @text-box-display;
  color: @text-color;
  font-size: @text-font-size;
  letter-spacing: normal;
  &:extend(.fxs_styledIndicator_label, .fxs_boldAntialised_style);
}

// Label variants
.fxs_label_variants(@label-background; @label-textColor) {
  background-color: @label-background;
  color: @label-textColor;
}

// ALERT VARIANTS
.fxs_alert_variants(@alert-background; @alert-textColor) {
  background-color: @alert-background;
  color: @alert-textColor;
  a, .fxs_close { color: @alert-textColor; }
}

// mixin first level nav
.fxs_vertical_block_nav(@borderBottom; @lineHeight; @fontSize) {
  a {
    display: block;
    border-bottom:@borderBottom;
    line-height:@lineHeight;
    padding:10px 1rem 10px 1rem;
    color:  @lightest_clr;
    font-size: @fontSize;
    text-decoration: none;
    text-transform: uppercase;
    &:hover { background-color:@dark_4_clr; }
  }
  &.active a { background-color:@dark_3_clr; } 
}

.fxs_list_block_btn(@borderBottom; @lineHeight; @fontSize; @itemHeight) {
  display: block;
  height:@itemHeight;
  border-bottom:@borderBottom;
  line-height:@lineHeight;
  padding:10px 1rem 10px 1rem;
  color:  @lightest_clr;
  font-size: @fontSize;
  text-decoration: none;
  text-transform: uppercase;
  &:hover { background-color:@dark_4_clr; }
  &.active { background-color:@dark_3_clr; }
}

// mixin second level a
.fxs_list_nav(@fontSize; @colorItems; @paddingParameters){
  padding: @paddingParameters;
  color: @colorItems;
  font-size: @fontSize;
  text-decoration: none;
  display: block;
  &:hover {
    background-color:@dark_3_clr;
    color:@lightest_clr;
  }
}

// tabs items
.fxs_tab_item(@tabs-container-border; @tab-link-color; @tab-link-hover-border; @tab-height){
  border-bottom: @tabs-container-border;
  height: @tab-height;
  margin: 0 0 1rem;
  padding: 0 0.5rem;
  font-size: 5px;
  li {
    display:inline-block;
    a {
      display:block;
      text-transform: uppercase;
      color: fade(@tab-link-color, 75%);
      font-size: @txt_size_xsmall;
      text-decoration: none;
      padding: 0 0.63rem;
      line-height: @tab-height;
      height: @tab-height;
      &:hover {
        border-bottom: 5px solid @tab-link-hover-border;
        background-color: transparent;
        color: @tab-link-color;
      }
    }
    &.active a {
      border-bottom: 5px solid @highlight_clr;
      background-color: transparent;
      color:@tab-link-color!important;
    }
  }   
}

////////// MEDIA & WIDGETS ///////////

// Media objects
.fxs_aspectRatio_media(@width; @height) {
  &:extend(.fxs_transition);
  position: relative;
  overflow: hidden;
  &::before {
    display: block;
    content: " ";
    width: 100%;
    padding-top: (@height / @width) * 100%;
  }
  img {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
  }
}

// Pre space wide widgets
.fxs_wideWidget_pre(@widget-padding-default: 1rem; @widget-padding-m: 2rem) {
  padding: @widget-padding-default;
  margin-bottom: 1rem;
  &:extend(.fxs_wideContent_bordered);
  @media (min-width: @screen-s) { padding: @widget-padding-m; }
}

////////// GRID SYSTEMS ///////////

// fxstreet grid breakpoints
@grid-columns: 12;
@grid-gutter-width: 1rem;

// Creates a wrapper for a series of columns
.make-row(@gutter: @grid-gutter-width) {
  // Then clear the floated columns
  &:extend(.fxs_clearfix all);
  margin-left:  (@gutter / -2);
  margin-right: (@gutter / -2);
  
}

// default 
.column-default-parameters(@gutter: @grid-gutter-width) {
  position: relative;
  // Prevent columns from collapsing when empty
  min-height: 1px;
  // Inner gutter via padding
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);
}

// Generate the x-small columns (inside swipe content in mobile)
.make-sm-column(@columns) {
  width: percentage((@columns / @grid-columns));
  display: inline-block;
  vertical-align: top;
  white-space: normal;
  letter-spacing: normal;
}

// Generate the default columns 680
.make-md-column(@columns) {
  @media (min-width: @screen-s) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// Generate the large columns 1024
.make-lg-column(@columns) {
  @media (min-width: @screen-m) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// Generate the extra large columns 1100
.make-xlg-column(@columns) {
  @media (min-width: @screen-l) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

/////////////////////////////////////////////////////////////////////////
////////////////////// Bootstrap 3.3.5 Overrides ///////////////////////
//////////////////// (custom bootstrap mixins) ////////////////////////

.reset-text() {
  font-family: @txt_fontfamily;
  // We deliberately do NOT reset font-size.
  font-style: normal;
  font-weight: @txt_fontweight;
  letter-spacing: normal;
  line-break: auto;
  line-height: @txt_lineheight_reset;
  text-align: left;
  text-decoration: none;
  text-transform: none;
  white-space: normal;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;
}
