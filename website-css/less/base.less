///////////////////////////////////////////////////////////////
/////////////// Helper classes & basic styles ////////////////
/////////////// (Helpers, html base & mixins) ///////////////
////////////////////////////////////////////////////////////

// Box model & typo rendering
* {
  .box-sizing(border-box);
  text-rendering: optimizelegibility;
}

// Clear content rows
.fxs_clearfix {
  &::before, &::after {
    content: " ";
    display: table;
  }
  &::after {
    clear:both;
  }
}

// Content source only for acceskey
.fxs_skip {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    border: 0;
    font-size: @txt_size_nano;
    &:active, &:focus {
      position: static;
      width: auto;
      height: auto;
      margin: 0;
      overflow: visible;
      clip: auto
  }
}

// Bolds & strongs with smooth borders
.fxs_boldAntialised_style{
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: antialiased;
  font-weight: @txt_fontweight_bold;
}

// Italic upercased labels
.fxs_styledIndicator_label {
  text-transform: uppercase;
  font-style: italic;
}

// muted text
.fxs_mutedContent_label {
  font-size: @txt_size_xsmall;
  color: @light_2_clr;
  font-style: italic;
  display: block;
  margin-top: -1rem/4;
  i{ font-size: @txt_size_small; }
}

// Divider base
.fxs_divider_base {
  background-color: @light_4_clr;
  margin-bottom: 1rem;
}

// Helpers, generic margins, positions & displays
.fxs_relativePositioning { position: relative; }
.fxs_iBlock { display: inline-block; }

// Wide content containers
.fxs_wideContent {
  &:extend(.fxs_clearfix all);
  margin-left:-1rem;
  margin-right:-1rem;
  @media (min-width: @screen-m) {
      margin-left:-2rem;
      margin-right:-2rem;
  }
}

.fxs_wideContent_bordered {
  &:extend(.fxs_wideContent all);
  border-top: 5px solid @light_4_clr;
}

/////////////////////////////////////////////////////////////
///////////////// Basic html styles ////////////////////////
///////////////////////////////////////////////////////////

p { margin: 0 0 @txt_size_xsmall; }

strong { &:extend(.fxs_boldAntialised_style); }

blockquote {
  padding: 0 0 0.5rem 2rem;
  font-style: italic;
  position: relative;
  margin-bottom: 1rem;
  &:before, &:after { position: absolute; }
  &:before{
    display: block;
    color: @light_4_clr;
    font: normal normal normal 1.25rem FontAwesome;
    width: 2rem;
    height: 2rem;
    top: 0;
    left: 0;
    content: "\f10d";
  }
  &:after{
    content: " ";
    width: 3rem;
    bottom: 0;
    left: 0;
    margin-bottom: 0;
        background-color: @light_4_clr;
    height: 3px;
  }
  footer {
    font-size: @txt_size_small; 
    color: @light_2_clr;
  }
}

small {
  font-size: @txt_size_nano;
  color: @light_1_clr;
}

hr {
  border: 0;
  background-color: @dark_4_clr;
  margin-left: 0;
  height: 1px;
}

figcaption {
  font-size: @txt_size_xsmall;
  line-height: @txt_lineheight_xsmall;
  font-weight: @txt_fontweight;
  margin: 0.5rem 1rem;
  small {
    display: block;
    padding-top: .25rem;
  }
  @media (min-width: @screen-m) { margin: 0.5rem 0; }
}

ol, ul { list-style: none; }

ol, ul, li {
  margin: 0;
  padding: 0;
}

// Images
img {
  max-width: 100%;
  min-width: 100%;
  height: inherit;
}

// Tables
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/////////////////////////////////////////////////////////////
//////////////////// Links styles //////////////////////////
///////////////////////////////////////////////////////////

a{
  color: @highlight_clr;
  text-decoration: none;
  &:extend(.fxs_boldAntialised_style);
  &:hover{ text-decoration: underline; }
}

// Parent section link
.fxs_entry_sectionlink {
  display: inline-block;
  padding:0 2px;
  text-transform: uppercase;
}

.fxs_mutedLink {
  color: #48484e;
  padding-right: 10px;
  font-size: 11px;
}

/////////////////////////////////////////////////////////////
//////////////////// Header styles /////////////////////////
///////////////////////////////////////////////////////////

h1, h2, h3, h4, h5 {
  color: @dark_1_clr;
  letter-spacing: -0.03rem;
  &:extend(.fxs_boldAntialised_style);
  // Headline link
  a {
    color: @dark_1_clr;
    display: block;
    &:hover{
      color: @highlight_clr;
      text-decoration: none;
    }
  }
}

h2 { font-size: @txt_size_xxlarge; }

h3 { font-size: @txt_size_xlarge; }

h4 { font-size: @txt_size_large;}

// Headlines
.fxs_headline_large {
  font-size: @txt_size_huge;
  line-height: @txt_lineheight_large;
  padding: 0.5rem 0;
  @media (min-width: @screen-m) {
    font-size: @txt_size_xhuge;
    line-height: @txt_lineheight_xlarge;
  }
}

.fxs_headline_medium {
  font-size: @txt_size_large;
  line-height: @txt_lineheight;
  padding: 0 0 0.25rem;
  @media (min-width: @screen-m) {
    font-size: @txt_size_huge;
    line-height: @txt_lineheight_large;
  }
}

.fxs_headline_small {
  font-size: @txt_size_large;
  line-height: @txt_lineheight;
  padding: 0 0 0.25rem;
}

.fxs_headline_tiny {
  font-size: @txt_defaultsize_rem;
  line-height: @txt_lineheight_small;
}

.fxs_headline_nano, .fxs_headline_from_nano_to_small, .fxs_headline_from_nano_to_tiny {
  font-size: @txt_size_small;
  line-height: @txt_lineheight_small;
}

// Responsive headlines
.fxs_headline_from_nano_to_small {
  @media (min-width: @screen-m) {
    font-size: @txt_size_large;
    line-height: @txt_lineheight;
  }
}

.fxs_headline_from_nano_to_tiny {
  @media (min-width: @screen-m) {
    font-size: @txt_defaultsize_rem;
    line-height: @txt_lineheight_small;
  }
}

////////////////////////////////////////////////
////////// TRANSITIONS & ANIMATIONS ///////////
//////////////////////////////////////////////

// General transitions
.fxs_transition { .transition(all .25s ease-in-out); }
.fxs_pageSidebar_transition { .transition(transform .25s ease-in-out); }

// Animations
.keyframes(~'slide-from-top, from {margin-top: -35px; opacity:.1;} to {margin-top: 0; opacity:1;}');
.keyframes(~'slide-from-top-and-appear, from {top: 97%; opacity:0; visibility: hidden; } to {top: 100%; opacity:1; visibility: visible}');
.keyframes(~'grow-and-show, from {height:0; padding:0 8px; opacity:0;} to {height: auto; padding:8px; opacity:1;}');
.keyframes(~'just-appear, from {opacity:0; visibility: hidden; } to {opacity:1; visibility: visible}');
.keyframes(~'show-sponsor-from-top, 0% {max-height:0; opacity:0; } 70% {max-height:80px; opacity:0.6;} 100% {max-height:250px; opacity:1;}');


/////////////////////////////////////////////////////////////////////
/////////// Scrollable & Swipe content styles //////////////////////
///////////////////////////////////////////////////////////////////

// Scrollable content
.fxs_scrollableContent {
  -webkit-overflow-scrolling: touch;
  overflow-x: hidden;
  overflow-y: hidden;
  @media (min-width: @screen-l) {
    &::-webkit-scrollbar, &::-webkit-scrollbar-track, &::-webkit-scrollbar-corner, &::-webkit-scrollbar-button { background-color: transparent;}
    &::-webkit-scrollbar {
      width: 5px;
      height: 5px;
      border-radius: 5px;
    }
      &::-webkit-scrollbar-track { .box-shadow(inset 0 -2px 4px rgba(255, 255, 255, 0.33)); }
      &::-webkit-scrollbar-thumb {
        .box-shadow(inset 0 0 2px rgba(255, 255, 255, 0.75));
          background-color: rgba(120, 121, 122, 0.4);
          border-radius: 5px;
      }
      &::-webkit-scrollbar-button {
        width: 0;
        height: 0;
        display: none;
      }
      scrollbar-base-color: transparent;
      scrollbar-3dlight-color: @lightest_clr;
      scrollbar-highlight-color: @lightest_clr;
      scrollbar-track-color: @light_4_clr;
      -ms-overflow-style: -ms-autohiding-scrollbar;
  }
}

// Swipe content in mobile
.fxs_swipeContent_slider {
  &:extend(.fxs_scrollableContent all);
  .calc(width, ~'100% + 0.5rem');
  padding: 0 0 1rem;
  white-space: nowrap;
  display: inline-block;
  &:hover, .fxs_touch & { overflow-x: auto; }
  @media (min-width: @screen-m) {
    width: 100%;
  }
}

// Related content in detail pages
.fxs_relatedContentSlot {
  .column-default-parameters();
  display: inline-block;
  float: none!important;
  min-width: 140px;
  vertical-align: top;
  white-space: normal;
  letter-spacing: normal;
}

///////////////////////////////////////////////////////////
////////////////////// FXS Mixins ////////////////////////
/////////////////////////////////////////////////////////

// Plain text generic style
.fxs_plain_txt_rules(@txt-font-size; @txt-line-height) {
  font-size: @txt-font-size;
  line-height: @txt-line-height;
  font-weight: @txt_fontweight_light;
  > p, ul, ol, > table, > blockquote { margin-bottom: @txt_size_large; }
  ul, ol {
    padding-top: @txt_size_xsmall;
    padding-left: 1rem;
    @media (min-width: @screen-m) { padding-left: 2rem; }
    li { margin-bottom: @txt_size_xsmall; }
  }
  ul {
    list-style-type: disc;
    ul {
      list-style-type: circle;
      ul { list-style-type: square; }
    }
  }
  ol { list-style-type: decimal; }
  h2, h3, h4 { margin-bottom: @txt_defaultsize_rem; }
  > img, .fxs_mediaContainer img {
    min-width: inherit;
    max-width: 100%;
  }
}

.fxs_entryPlain_txt {
  .fxs_plain_txt_rules(@txt_size_small; @txt_lineheight_small);
}

.fxs_entryPlain_txt_large {
  .fxs_plain_txt_rules(@txt_defaultsize_rem; @txt_lineheight_reset);
  @media (min-width: @screen-m) { font-size: @txt_size_large; }
}

// Button Generic
.fxs_btn_properties(@btn-border; @btn-height; @btn-margin; @btn-padding) {
  &:extend(.fxs_boldAntialised_style, .fxs_transition);
  border: @btn-border;
  height: @btn-height;
  margin: @btn-margin;
  padding: @btn-padding;
  cursor: pointer;
  display: inline-block;
  text-align: center;
  vertical-align: middle;
  &, &:hover, &:hover { text-decoration: none!important; }
  &.disabled, &[disabled], fieldset[disabled] & {
    cursor: disabled;
    .opacity(.65);
  }
}

// Button variants
.fxs-button-variants(@btn-txt-color; @btn-bg-color; @btn-border-color) {
  color: @btn-txt-color;
  background-color: @btn-bg-color;
  border-color: @btn-border-color;
  &:hover {
    background-color: fade(@btn-bg-color, 80%);
    border-color: fade(@btn-border-color, 40%);
  }
  &.active,
  .active > &.fxs_btn_dd,
  &:active, &:focus {
    background-color: fade(@btn-bg-color, 80%);
    border-color: darken(@btn-border-color, 16%);
  }
  &.disabled, &[disabled], fieldset[disabled] & {
    &, &:hover, &:focus,
    &.focus, &:active, &.active {
      background-color: @btn-bg-color;
      border-color: @btn-border-color;
    }
  }

  &.fxs_btn_line {
    background-color: fade(@btn-bg-color, 0%);
    &:hover {
      background-color: fade(@btn-bg-color, 15%);
      border-color: @btn-border-color;
    }
    &.active,
    .active > &.fxs_btn_dd,
    &:active, &:focus {
      background-color: fade(@dark_1_clr, 15%);
    }
    &.disabled, &[disabled], fieldset[disabled] & {
      &, &:hover, &:focus,
      &.focus, &:active, &.active {
        background-color: fade(@btn-bg-color, 0%);
        border-color: @btn-border-color;
      }
    }
  }
}

// Labels & subtitles text style
.fxs_stiled_text_variants(@text-box-display; @text-color; @text-font-size) {
  display: @text-box-display;
  color: @text-color;
  font-size: @text-font-size;
  letter-spacing: inherit;
  &:extend(.fxs_styledIndicator_label, .fxs_boldAntialised_style);
}

// Label variants
.fxs_label_variants(@label-background; @label-textColor) {
  background-color: @label-background;
  color: @label-textColor;
}

// ALERT VARIANTS
.fxs_alert_variants(@alert-background; @alert-textColor) {
  background-color: @alert-background;
  color: @alert-textColor;
  a { color: @alert-textColor; }
}

// tabs items
.fxs_tab_item(){
    border-bottom: 1px solid @dark_3_clr;
    margin-bottom: 1rem;
    padding: 0 0.5rem;
    height: @main_header_height;
    li{
        display:inline-block;
        a{
            display:block;
            text-transform: uppercase;
            color: fade(@lightest_clr, 80%);
            font-size: @txt_size_xsmall;
            text-decoration: none;
            padding: 0 0.4rem;
            line-height: @main_header_height;
            height:45px;
            &:extend(.fxs_transition);
            &:hover{
                border-bottom: 5px solid fade(@lightest_clr,40%);
                background-color: none;
                color: @lightest_clr;
            }
            &.active{
                border-bottom: 5px solid @highlight_clr;
                color:@lightest_clr;
            }
        }
    }   
}


// mixin base styles nav

.fxs_main_nav(@textTransform; @borderBottom; @lineHeight; @fontSize){
    display: block;
    height:@main_header_height;
    border-bottom:@borderBottom;
    text-transform: @textTransform;
    line-height:@lineHeight;
    padding:10px 1rem 10px 1rem;
    color:  @lightest_clr;
    font-size: @fontSize;
    text-decoration: none;
    &:extend(.fxs_transition);
    &:hover{
        background-color:@dark_3_clr;
        color:@lightest_clr;
    }
}
// mixin base styles nav
.fxs_main_nav_rules(@textTransform; @borderBottom; @fontSize; @colorItems; @displayPosition; @paddingParameters){
    display: @displayPosition;
    border-bottom:@borderBottom;
    text-transform: @textTransform;
    padding: @paddingParameters;
    color: @colorItems;
    font-size: @fontSize;
    text-decoration: none;
    &:extend(.fxs_transition);
}

// Media objects
.fxs_aspectRatio_media(@width; @height) {
  &:extend(.fxs_transition);
  position: relative;
  overflow: hidden;
  &::before {
    display: block;
    content: " ";
    width: 100%;
    padding-top: (@height / @width) * 100%;
  }
  img {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
  }
}

// Pre space wide widgets
.fxs_wideWidget_pre(@widget-padding-default: 1rem; @widget-padding-m: 2rem) {
  padding: @widget-padding-default;
  margin-bottom: 1rem;
  &:extend(.fxs_wideContent_bordered);
  @media (min-width: @screen-m) { padding: @widget-padding-m; }
}

// fxstreet grid breakpoints
@grid-columns: 12;
@grid-gutter-width: 1rem;
@grid-float-breakpoint-medium: @screen-m;
@grid-float-breakpoint-large: @screen-l;
@grid-float-breakpoint-xlarge: @screen-xl;

// Creates a wrapper for a series of columns
.make-row(@gutter: @grid-gutter-width) {
  // Then clear the floated columns
  &:extend(.fxs_clearfix all);
  margin-left:  (@gutter / -2);
  margin-right: (@gutter / -2);
  
}

// default 
.column-default-parameters(@gutter: @grid-gutter-width){
  position: relative;
  // Prevent columns from collapsing when empty
  min-height: 1px;
  // Inner gutter via padding
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);
}

// Generate the small columns 320
.make-sm-column(@columns) {
  // Calculate width based on number of columns available
  float: left;
  width: percentage((@columns / @grid-columns));
}

// Generate the medium columns 768
.make-md-column(@columns) {
  // Calculate width based on number of columns available
  @media (min-width: @grid-float-breakpoint-medium) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// Generate the large columns 1024
.make-lg-column(@columns) {
  // Calculate width based on number of columns available
  @media (min-width: @grid-float-breakpoint-large) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// Generate the extra large columns 1180
.make-xlg-column(@columns) {
  // Calculate width based on number of columns available
  @media (min-width:@grid-float-breakpoint-xlarge) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
